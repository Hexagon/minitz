let minitz={};const checkTimezone=function(tzString){if(!Intl.supportedValuesOf){return true}return Intl.supportedValuesOf("timeZone").some(x=>x.toLowerCase()==tzString.trim().toLowerCase())};minitz.toTZ=function(date,tzString){if(!checkTimezone(tzString))throw new Error("Invalid timezone passed to toTZ(): "+tzString);return new Date(date.toLocaleString("sv-SE",{timeZone:tzString}))};minitz.fromTZ=function(inputDate,tzString,correctInvalidTime){if(!checkTimezone(tzString))throw new Error("Invalid timezone passed to toTZ(): "+tzString);const inputDateWithOffset=new Date(inputDate.toLocaleString("sv-SE",{timeZone:tzString})),offset=inputDate.getTime()-inputDateWithOffset.getTime(),guessedLocalDate=new Date(inputDate.getTime()+offset),guessedInputDate=new Date(guessedLocalDate.toLocaleString("sv-SE",{timeZone:tzString}));const guessedInputDateOffset=guessedInputDate.getTime()-inputDate.getTime();if(guessedInputDateOffset===0){return guessedLocalDate}else{const guessedLocalDate2=new Date(inputDate.getTime()+offset-guessedInputDateOffset),guessedInputDate2=new Date(guessedLocalDate2.toLocaleString("sv-SE",{timeZone:tzString})),guessedInputDateOffset2=guessedInputDate2.getTime()-inputDate.getTime();if(guessedInputDateOffset2===0){return guessedLocalDate2}else if(correctInvalidTime){return guessedLocalDate}else{throw new Error("Invalid date passed to fromTZ()")}}};minitz.minitz=minitz;export{minitz as default,minitz};